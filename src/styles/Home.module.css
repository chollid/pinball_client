.main {
  padding: 6rem;
  height: 100vh;
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

/* Placeholder Style */
.latInput::placeholder,
.longInput::placeholder {
  /* Chrome, Firefox, Opera, Safari 10.1+ */
  color: var(--grey300);
  opacity: 1; /* Firefox */
}

.latInput::-ms-input-placeholder,
.latInput::-ms-input-placeholder {
  /* Microsoft Edge */
  color: var(--grey300);
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition: background 200ms, border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
}

.helpButton {
  border: none;
  background: none;
  color: rgb(64, 64, 137);
  cursor: pointer;
  border-bottom: 1px solid rgb(38, 38, 38);
  font-size: 16px;
}

.helpContainer {
  width: 300px;
  height: 200px;
  border: 1px solid var(--grey400);
  border-radius: var(--border-radius);
  padding: 10px;
  line-height: 1.5;
  text-align: center;
  background: rgb(241, 241, 241);
}

.label {
  display: flex;
  flex-direction: column;
  width: 100%;
  align-items: center;
  justify-content: center;
}

.labelEl {
  margin: 0 0 4px 8px;
}

.latLabelContainer {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  width: 75%;
}

.listContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 110px;
  margin-top: 10px;
}

.listOuter {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  width: 350px;
  margin: 0px 0px 75px 0;
  border-radius: var(--border-radius);
  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;
}

.listTop {
  width: 100%;
  height: 50px;
  font-size: 14px;
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
  background-color: rgb(110, 139, 207);
  display: flex;
  align-items: center;
  justify-content: center;
  padding-left: 12px;
  color: rgb(255, 255, 255);
}

.listBottom {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 50px;
  font-size: 12px;
  color: rgb(38, 38, 38);
  padding: 6px 0 5px 12px;
  background-color: rgb(255, 255, 255);
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

.longLabelContainer {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  width: 75%;
  margin-top: 30px;
}

.listWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.latLongInputContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  box-shadow: 0px 2px 8px -1px #0000001a;
  border-radius: var(--border-radius);
  width: 350px;
  height: 400px;
  margin: 70px 0px 35px 0;
  margin-top: 20px;
}

.latInput {
  border: none;
  width: 75%;
  border-radius: 12px;
  padding: 14px;
}

.latInput:focus-visible,
.longInput:focus-visible {
  outline-color: var(--grey500);
  outline-style: solid;
}

.locationFound {
  font-size: 20px;
  margin-bottom: 30px;
}

.longInput {
  border: none;
  width: 75%;
  border-radius: 12px;
  padding: 14px;
}

.latInput:hover,
.longInput:hover {
  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,
    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;
}

.mainContainer {
  display: flex;
  align-items: center;
  justify-content: center;
}

.nearMeButton {
  padding: 8px 16px;
  cursor: pointer;
}

.pinballImage {
  background-repeat: repeat-y;
  position: absolute;
  right: 0;
  top: 10%;
  z-index: -2;
}

.scrollButton {
  border: none;
  cursor: pointer;
  font-size: 11px;
}

.scrollText {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-top: 10px;
}

.search {
  border: none;
  color: rgb(247, 247, 247);
  font-size: 16px;
  background-color: rgb(110, 139, 207);
  padding: 14px 38px;
  border-radius: 12px;
  cursor: pointer;
}

.search:hover {
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
}

.searchContainer {
  margin-top: 26px;
}

.section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo,
  .thirteen img {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
